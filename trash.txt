# def fitfcn_n2lo_xpt(self,p,xdata):
    #     ## M_PI OR EPS_PI ##

    #     output = 0
    #     # if self.model_info['nucleon_full'] is True:
    #     #     output += (

    #     #     self.z_b * self.fitfcn_lo_ct(p=p, xdata=xdata) 
    #     #     + xdata['lam_chi'] * ((xdata['b_1']*xdata['eps_pi']**2) + xdata['b_5'] * p['m_pi']**2 
    #     #     + xdata['b_6']* p['m_pi']**2 + xdata['b_8']*p['m_pi']**2 )
    #     #     - xdata['lam_chi']**2 * xdata['C_b']* naf.fcn_L(m=xdata['eps_pi'],mu=1)
    #     #     - 6*p['s_{proton}'] * xdata['lam_chi']**2 * p['m_pi'] * naf.fcn_L(m=xdata['eps_pi'],mu=1)
    #     #     + 3*xdata['bA'] *  xdata['lam_chi']**3 8 naf.fcn_L_bar(m=xdata['eps_pi'],mu=1) 
    #     #     + 3*xdata['bvA']  * 4*xdata['lam_chi']**3 * (naf.fcn_L_bar(m=xdata['eps_pi'],mu=1) - 1/2*xdata['eps_pi']**4)
    #     #     + xdata['lam_chi'] * 27/16*p['g_A']**2 / p['m_{proton,0}'] * (naf.fcn_L_bar(m=xdata['eps_pi'],mu=1) + 5/6*xdata['m_pi']**4)
    #     #     + xdata['lam_chi']**2 * 5*p['g_{delta,proton}']**2 / 2*p['m_{proton,0}']*(naf.fcn_L_bar(m=xdata['eps_pi'],mu=1) + 9/10*xdata['m_pi']**4))
    #     #     + 9*xdata['g_A']**2 * p['s_{proton}'] * xdata['lam_chi']**2 * xdata['eps_pi'] *(naf.fcn_L(m=xdata['eps_pi'],mu=1)+2/3*xdata['eps_pi']**2)
    #     #     + 8*p['g_{delta,proton}']**2 * p['s_{proton,bar}'] * xdata['lam_chi']**2 * xdata['eps_pi']*(naf.fcn_J(eps_pi = xdata['eps_pi'], eps_delta=xdata['eps_delta'])+ xdata['eps_pi']**2)
    #     #     + 3 * p['g_A']**2 * xdata['lam_chi']**2 * xdata['F_b'] * (naf.fcn_L(m=xdata['eps_pi'],mu=1) + 2/3*xdata['eps_pi']**2)
    #     #     - 2*p['g_{delta,proton}']**2 * xdata['lam_chi']**2 * xdata['gamma'] * xdata['G_b'] * (naf.fcn_J(eps_pi = xdata['eps_pi'], eps_delta=xdata['eps_delta'])+xdata['eps_pi']**2) 
        

    #     return output
